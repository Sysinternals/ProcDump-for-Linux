# Azure build pipelines for Procdump-for-Linux

trigger:
  branches:
    include:
      - release/*
    exclude:
      - dev/*
      - test/*

pr:
  - master

stages:
 - stage: Build
   jobs:
    - job: "Run_Unit_Tests"
      pool: 
        vmImage: 'ubuntu-latest'
      steps:
      - script: |
          sudo apt update
          sudo apt install -y gdb stress-ng zlib1g-dev
        displayName: 'Setup build environment'
        
      - script: |
          make
        displayName: 'Build test binary'

      - script: |
          sudo ./tests/integration/run.sh
        displayName: 'Run unit tests'

    - job: "DEB_Package_Build"
      pool: "Ubuntu_18_Package_Build"
      condition: not(eq(variables['Build.Reason'], 'PullRequest'))
      dependsOn:
        - Run_Unit_Tests
      steps:
      - script: |
          make
        displayName: 'Build procdump Ubuntu'

      - script: |
          export REVISION=$(Build.BuildId)
          make release
          make deb
        displayName: 'Building debian package & artifacts'

      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/pkgbuild'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
        displayName: 'Copy build artifacts to staging'
      
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'
    
    - job: 'RPM_Package_Build'
      pool: 'CentOS_Package_Build'
      dependsOn:
        - DEB_Package_Build
      steps:
        - script: |
            make
          displayName: "Build Procdump Centos"

        - script: |
            export REVISION=$(Build.BuildId)
            make release
            make rpm
          displayName: 'Building centos package & artifacts'

        - task: CopyFiles@2
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)/pkgbuild'
            Contents: '**'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'
          displayName: 'Copy build RPM artifacts to staging'
        
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'

 - stage: SignPublish
   jobs:
    - job: "DEB_Package_Build"
      pool: "Ubuntu_18_Package_Build"
      condition: not(eq(variables['Build.Reason'], 'PullRequest'))
      steps:
      - script: |
          make
        displayName: 'Build procdump Ubuntu'

      - script: |
          export REVISION=$(Build.BuildId)
          make release
          make deb
        displayName: 'Building debian package & artifacts'

      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/pkgbuild'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
        displayName: 'Copy build artifacts to staging'

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'

      - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
        displayName: 'ESRP CodeSigning DEB'
        inputs:
          ConnectedServiceName: 'Sysinternals ESRP CodeSigning'
          FolderPath: '$(Build.ArtifactStagingDirectory)/DEBS/amd64'
          Pattern: '*.deb'
          signConfigType: inlineSignParams
          inlineOperation: |
            [
              {
                "keyCode": "CP-450779-Pgp",
                "OperationCode": "LinuxSign",
                "Parameters": {},
                "ToolName": "sign",
                "ToolVersion": "1.0"
              }
            ]
    
    - job: 'RPM_Package_Build'
      pool: 'CentOS_Package_Build'
      dependsOn:
        - DEB_Package_Build
      steps:
        - script: |
            make
          displayName: "Build Procdump Centos"

        - script: |
            export REVISION=$(Build.BuildId)
            make release
            make rpm
          displayName: 'Building centos package & artifacts'

        - task: CopyFiles@2
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)/pkgbuild'
            Contents: '**'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'
          displayName: 'Copy build RPM artifacts to staging'
        
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'

